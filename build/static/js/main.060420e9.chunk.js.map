{"version":3,"sources":["components/DisplayWeather.js","components/Navbar.js","App.js","index.js"],"names":["DisplayWeather","props","console","log","weatherData","location","temperature","description","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeWeather","placeholder","onChange","changeRegion","target","value","App","state","coords","latitude","longitude","data","inputData","change","setState","event","preventDefault","Axios","get","then","res","name","current","weather_descriptions","weather_icons","navigator","geolocation","getCurrentPosition","position","newCoords","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.060420e9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function DisplayWeather(props) {\r\n\r\n  console.log(props.weatherData);\r\n\r\n  const { location, temperature, description, region, country, wind_speed, pressure, precip, humidity, img } = props.weatherData;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-weather\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-temp\">\r\n                    <h1>{temperature}Â°C , {description}</h1>\r\n                    <h4>{location}</h4>\r\n                    <p>{region}, {country}</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <img className=\"mainImg\" src={img} alt=\"weather-img\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Wind Speed</b></p>\r\n                    <h2>{wind_speed} <small>km/h</small></h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Pressure</b></p>\r\n                    <h2>{pressure} <small>mBar</small></h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Precipitation</b></p>\r\n                    <h2>{precip}<small>mm</small></h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Humidity</b></p>\r\n                    <h2>{humidity}<small>%</small></h2>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n  \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <h1 className=\"title\">Weather-app</h1>\r\n      </div>\r\n\r\n      <div className=\"col-md-6\">\r\n\r\n        <form className=\"region\" onSubmit={(e) => props.changeWeather(e)}>\r\n          <input className=\"regioninput\" placeholder=\"Enter location\" onChange={(e) => { props.changeRegion(e.target.value)}} />\r\n        </form>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport DisplayWeather from './components/DisplayWeather';\nimport Navbar from './components/Navbar'\nclass App extends React.Component {\n\n     // state\n    state = {\n      coords: {\n        latitude: 45,\n        longitude: 60\n      },\n      data:{},\n      inputData:\"\"\n    }\n\n  componentDidMount(){\n     //get device location\n    if(navigator.geolocation) {\n\n      navigator.geolocation.getCurrentPosition((position) => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n\n        this.setState({coords: newCoords})\n\n        // API call\n        Axios.get(`http://api.weatherstack.com/current?access_key=5a85e674382153d37cefda8f3ff6d2f5&query=${this.state.coords.latitude},${this.state.coords.longitude}`).then(res => {\n          \n        let weatherData = {\n          location: res.data.location.name,\n          temperature: res.data.current.temperature,\n          description: res.data.current.weather_descriptions[0],\n          region: res.data.location.region,\n          country: res.data.location.country,\n          wind_speed: res.data.current.wind_speed,\n          pressure: res. data.current.pressure,\n          precip: res.data.current.precip,\n          humidity: res.data.current.humidity,\n          img: res.data.current.weather_icons\n          }\n\n          this.setState({ data: weatherData });\n        })\n      })\n    } else {\n      console.log('Not supported');\n    }\n  }\n\n  // track the input field\n\n  change = (value) => {\n    this.setState({inputData: value})\n  }\n\n  changeWeather = (event) => {\n    event.preventDefault();\n\n    //API call\n    Axios.get(`http://api.weatherstack.com/current?access_key=5a85e674382153d37cefda8f3ff6d2f5&query=${this.state.inputData}`).then(res => {\n      let weatherData = {\n        location: res.data.location.name,\n        temperature: res.data.current.temperature,\n        description: res.data.current.weather_descriptions[0],\n        region: res.data.location.region,\n        country: res.data.location.country,\n        wind_speed: res.data.current.wind_speed,\n        pressure: res. data.current.pressure,\n        precip: res.data.current.precip,\n        humidity: res.data.current.humidity,\n        img: res.data.current.weather_icons\n      }\n\n      this.setState({ data: weatherData });\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n\n        <div className=\"container\">\n          <Navbar changeWeather ={this.changeWeather} changeRegion = {this.change} />\n          <DisplayWeather weatherData = {this.state.data} />\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}